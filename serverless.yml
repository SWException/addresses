service: addresses
frameworkVersion: "2"

useDotenv: true

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline-dotenv
  - serverless-offline

custom:
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules:
      forceExclude:
        - aws-sdk
    packager: "npm"
  serverless-offline:
    httpPort: 4000
    ignoreJWTSignature: true

provider:
  name: aws
  region: eu-central-1
  # profile: swexception
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"
  stage: ${opt:stage, 'dev'}

  apiGateway:
    restApiId: 95kq9eggu9
    restApiRootResourceId: zsd84g8moe

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    REGION: ${self:provider.region}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"

functions:
  getAddress:
    handler: "src/handlers/getAddress.HANDLER"
    events:
      - http:
          path: /addresses/{id}
          method: GET
          cors: true
  getAddresses:
    handler: "src/handlers/getAddresses.HANDLER"
    events:
      - http:
          path: /addresses
          method: GET
          cors: true
  createAddress:
    handler: "src/handlers/createAddress.HANDLER"
    events:
      - http:
          path: /addresses
          method: POST
          cors: true
  deleteAddress:
    handler: "src/handlers/deleteAddress.HANDLER"
    events:
      - http:
          path: /addresses/{id}
          method: DELETE
          cors: true
  updateAddress:
    handler: "src/handlers/updateAddress.HANDLER"
    events:
      - http:
          path: /addresses/{id}
          method: PATCH
          cors: true
resources:
  Resources:
    AddressesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: addresses
        AttributeDefinitions:
          - AttributeName: userid
            AttributeType: "S"
          - AttributeName: id
            AttributeType: "S"
        KeySchema:
          - AttributeName: userid
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: id-index
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
        BillingMode: PAY_PER_REQUEST