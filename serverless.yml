service: addresses
frameworkVersion: "2"

useDotenv: true

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline-dotenv
  - serverless-offline

custom:
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules:
      forceExclude:
        - aws-sdk
    packager: "npm"
  serverless-offline:
    httpPort: 4000
    ignoreJWTSignature: true

provider:
  name: aws
  region: eu-central-1
  # profile: swexception
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"
  stage: ${opt:stage, 'dev'}

  apiGateway:
    restApiId: 95kq9eggu9
    restApiRootResourceId: zsd84g8moe

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DOMAIN_SUFFIX: eml-be
    CALLBACK_URL: http://localhost:3000
    REGION: ${self:provider.region}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"

functions:
  addresses:
    handler: "src/getAddresses.HANDLER"
    events:
      - http:
          path: /addresses
          method: GET
          cors: true

resources:
  Resources:
    AddressesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: addresses
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: "S"
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST